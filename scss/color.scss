$color-primary: #efefef;
$color-secondary: #669c35;
$color-tertiary: #e46050;
$color-icon: #8d9491;
$color-link: #669c35;
$color-error: #d9511f;
$color-darkFont: #1a1a1a;
$color-lightFont: #fff;
$color-font: $color-darkFont;
$color-secondaryFont: lighten($color-font, 45);
// $color-secondaryFont: darken($color-font, 45);
$color-tertiaryFont: lighten($color-font, 60);
// $color-tertiaryFont: darken($color-font, 60);
$color-background: #fff;
$color-frameLine: #eee;
// 特殊顏色
$color-scroll: #777;
$color-fileLoaderErrorBackground: #f9f9f9;
$color-avatarBorder: #1ece6d;
$color-recorder: #f03d25;
$color-itemBorder: #eeeff0;
$color-messageTimespanBg: #f5f5f6;
$color-messageTimespan: #1f1f1f;
$color-fileLoadingFont: #cccccc;
$color-chatInputBg: #fbfbfb;
$color-actionBtn: #7b7d80;
$color-templateFrameLine: #cccccc;
$color-mapMarker: #fff080;

$lightness-level: 60;
$lightness-color-primary: lightness($color-primary);
$lightness-color-secondary: lightness($color-secondary);
$lightness-color-tertiary: lightness($color-tertiary);
$lightness-color-background: lightness($color-background);
$lightness-color-font: lightness($color-font);

// app.scss
#IMKitApp {
  background-color: $color-background;
  color: $color-font;
  input,
  button,
  select,
  textarea,
  optgroup,
  option {
    color: $color-font;
  }
  input,
  textarea {
    &::placeholder {
      color: $color-secondaryFont;
      opacity: 1;
    }
    &:-ms-input-placeholder {
      color: $color-secondaryFont;
    }
    &::-ms-input-placeholder {
      color: $color-secondaryFont;
    }
  }
  // Components/Avatar.scss
  .avatar {
    border-color: $color-itemBorder;
    background-color: $color-itemBorder;
    &.border {
      border-color: $color-itemBorder;
      background-color: $color-background;
    }
    .avatarText {
      color: $color-font;
    }
  }
  // Components/Button.scss
  .btn {
    &.btn-primary {
      border-color: $color-itemBorder;
      background-color: $color-background;
      @if $lightness-color-background > $lightness-level {
        color: $color-darkFont;
      } @else {
        color: $color-lightFont;
      }
      &:hover {
        @if $lightness-color-background > $lightness-level {
          background-color: darken($color-background, 5);
        } @else {
          background-color: lighten($color-background, 5);
        }
      }
    }
    &.btn-secondary {
      background-color: $color-secondary;
      @if $lightness-color-secondary > $lightness-level {
        color: $color-darkFont;
      } @else {
        color: $color-lightFont;
      }
      &:hover {
        @if $lightness-color-secondary > $lightness-level {
          background-color: darken($color-secondary, 5);
        } @else {
          background-color: lighten($color-secondary, 5);
        }
      }
    }
    &.btn-light {
      border-color: $color-background;
      background-color: $color-background;
      color: $color-font;
      &:hover {
        @if $lightness-color-background > $lightness-level {
          background-color: darken($color-background, 10);
        } @else {
          background-color: lighten($color-background, 10);
        }
      }
    }
  }
  // Components/Checkbox.scss
  .checkbox {
    .checkboxOuter {
      border-color: $color-frameLine;
      .checkboxInner {
        background-color: $color-primary;
      }
    }
    &.checked {
      .checkboxOuter {
        border-color: $color-primary;
      }
    }
  }
  // Components/Checkbox.scss
  .radio {
    .radioOuter {
      border-color: $color-frameLine;
      .radioInner {
        background-color: $color-primary;
      }
    }
    &.checked {
      .radioOuter {
        border-color: $color-primary;
      }
    }
  }
  // Components/DivEditor.scss
  .divEditor {
    .placeholder {
      color: $color-secondaryFont;
    }
  }
  // Components/FileLoader.scss
  .fileLoader {
    border-color: $color-frameLine;
    .fileLoaderMain {
      .fileLoaderImage {
        .fileLoaderImageCover {
          i {
            fill: $color-primary;
          }
        }
      }
      .fileLoaderFile {
        border-color: $color-frameLine;
      }
      .fileLoaderError {
        background-color: $color-fileLoaderErrorBackground;
      }
    }
    .fileLoaderFileInfo {
      .info {
        p {
          color: $color-secondaryFont;
          &.fileName {
            color: $color-font;
          }
        }
      }
    }
    .fileLoaderLoading {
      background-color: rgba($color-background, 0.8);
      .progress {
        color: $color-fileLoadingFont;
      }
    }
  }
  // Components/FileUploader.scss
  .fileUploader {
    .fileUploaderLoading {
      background-color: rgba($color-background, 0.8);
      .fileUploaderBar {
        background-color: $color-primary;
      }
    }
  }
  .tooltip {
    > .tooltipInner {
      background-color: $color-darkFont;
      color: $color-lightFont;
    }
    &.tooltip-rm {
      > .tooltipInner {
        &:before {
          border-right-color: $color-darkFont;
        }
      }
    }
    &.tooltip-cb {
      > .tooltipInner {
        &:before {
          border-bottom-color: $color-darkFont;
        }
      }
    }
  }
  // Components/Form.scss
  .form {
    .label {
      color: $color-secondaryFont;
    }
    select,
    input[type="text"],
    input[type="email"],
    input[type="number"] {
      border-color: rgba($color-secondaryFont, 0.5);
    }
  }
  // Components/Modal.scss
  .modal {
    background-color: rgba(invert($color-background), 0.5);
    .modalBox {
      background-color: $color-background;
      box-shadow: 0 2px 8px rgba(invert($color-background), 0.33);
      .modalClose {
        fill: $color-icon;
      }
    }
  }
  // Components/Scrollbar.scss
  .scrollBar {
    .scrollBarInner {
      .scrollBarContent {
        border-color: transparent;
      }
    }
    .scrollBackY {
      .scrollFrontY {
        background-color: $color-scroll;
      }
    }
  }
  // Home/index.scss
  .home {
    -webkit-tap-highlight-color: transparent;
    .pageLoading {
      background-color: $color-background;
    }
    .roomHeader {
      border-bottom-color: $color-frameLine;
      .iconBtn {
        &.primary {
          fill: $color-icon;
        }
        &.secondary {
          fill: $color-secondary;
        }
      }
    }
    .roomTip {
      p {
        color: $color-lightFont;
        background-color: $color-error;
        border-color: $color-error;
      }
    }
    .forwardCover {
      background-color: rgba($color-background, 0.1);
    }
  }
  // RoomChat/index.scss
  .roomChat {
    .roomHeader {
      .roomHeaderText {
        .description {
          @if $lightness-color-font > 50 {
            color: darken($color-font, 27);
          } @else {
            color: lighten($color-font, 27);
          }
        }
      }
    }
    .roomChatSearch {
      border-bottom-color: $color-frameLine;
      .searchIcon {
        @if $lightness-color-font > 50 {
          fill: darken($color-font, 70);
        } @else {
          fill: lighten($color-font, 70);
        }
        &.active {
          fill: $color-font;
        }
      }
      .searchMid {
        .searchInput {
          background-color: mix($color-frameLine, $color-background);
          border-color: $color-frameLine;
        }
      }
      .searchClose {
        color: $color-link;
      }
    }
    .dropzone {
      border-color: $color-primary;
    }
    // RoomChat/RoomChatOutput/index.scss
    .roomChatOutput {
      .messageLoading {
        background-color: $color-primary;
        @if $lightness-color-primary > $lightness-level {
          color: $color-darkFont;
        } @else {
          color: $color-lightFont;
        }
      }
      .list {
        .messages {
          .roomChatMore {
            color: $color-link;
          }
          // RoomChat/RoomChatOutput/RoomChatOutputMessage.scss
          .message {
            .timespan {
              span {
                background-color: $color-messageTimespanBg;
                color: $color-messageTimespan;
              }
            }
            .contentBox {
              .name {
                color: $color-secondaryFont;
              }
              .content {
                &.hasReply {
                  border-color: $color-itemBorder;
                  background-color: $color-background;
                  .reply {
                    border-bottom-color: $color-templateFrameLine;
                    .text {
                      border-color: transparent;
                      background-color: transparent;
                    }
                  }
                  .text {
                    border-color: transparent;
                    background-color: transparent;
                  }
                }
                .date {
                  background-color: $color-darkFont;
                  color: $color-lightFont;
                }
                .actionsBox {
                  svg {
                    color: $color-actionBtn;
                  }
                  .actions {
                    .actionsList {
                      background-color: $color-background;
                      border-color: $color-secondaryFont;
                      .actionsItem {
                        color: $color-secondaryFont;
                        &:hover {
                          color: $color-font;
                        }
                      }
                    }
                  }
                }
                .text {
                  border-color: $color-itemBorder;
                  background-color: $color-background;
                  color: $color-font;
                  &.onlyEmoji {
                    border-color: transparent !important;
                    background-color: transparent !important;
                    color: $color-font !important;
                  }
                  .textTag {
                    color: $color-link;
                  }
                  a {
                    color: $color-link;
                  }
                }
                .location {
                  border-color: $color-frameLine;
                  .info {
                    border-top-color: $color-frameLine;
                    .pos {
                      color: $color-secondaryFont;
                    }
                    .address {
                      color: $color-secondaryFont;
                    }
                  }
                }
                .messageInfo {
                  color: $color-secondaryFont;
                  .failed {
                    fill: $color-error;
                  }
                  .sending {
                    fill: $color-primary;
                  }
                }
                .templateButtons {
                  border-top-color: $color-templateFrameLine;
                  .templateButton {
                    a {
                      color: $color-link;
                    }
                  }
                }
                // RoomChat/RoomChatOutput/TemplateCarousel.scss
                .templateCarousel {
                  .templateCarouselItem {
                    border-color: $color-templateFrameLine;
                  }
                }
              }
              .extra {
                .UrlPreviews {
                  // RoomChat/RoomChatOutput/UrlPreview.scss
                  .urlPreview {
                    border-color: $color-frameLine;
                    color: $color-darkFont;
                    .urlPreviewHide {
                      fill: $color-actionBtn;
                    }
                  }
                }
              }
            }
            &.self {
              .contentBox {
                .content {
                  &.hasReply {
                    border-color: $color-primary;
                    background-color: $color-primary;
                    .reply {
                      border-bottom-color: $color-templateFrameLine;
                      .sender,
                      .text {
                        color: $color-font;
                      }
                    }
                  }
                  .text {
                    border-color: $color-primary;
                    background-color: $color-primary;
                    @if $lightness-color-primary > $lightness-level {
                      color: $color-darkFont;
                    } @else {
                      color: $color-lightFont;
                    }
                    a {
                      color: $color-link;
                    }
                  }
                }
              }
            }
          }
        }
      }
      .newMessage {
        background-color: $color-frameLine;
      }
      // RoomChat/RoomChatOutput/RoomChatOutputSilder.scss
      .roomChatOutputSilder {
        background-color: $color-background;
        .silderHeader {
          border-bottom-color: $color-frameLine;
          background-color: rgba($color-background, 0.9);
          .silderInfo {
            p {
              &.silderInfoTime {
                color: $color-secondaryFont;
              }
            }
          }
          .sliderBack,
          .silderClose {
            fill: $color-icon;
          }
        }
        .sliderThumbs {
          background-color: rgba($color-background, 0.9);
          border-top-color: $color-icon;
        }
      }
    }
    // RoomChat/RoomChatInput/index.scss
    .roomChatInput {
      background-color: $color-background;
      .typing {
        color: $color-secondaryFont;
      }
      .inputInner {
        border-top-color: $color-frameLine;
        background-color: $color-chatInputBg;
        .reply {
          border-bottom-color: $color-templateFrameLine;
          .replyLabel {
            background-color: $color-primary;
            @if $lightness-color-primary > $lightness-level {
              color: $color-darkFont;
            } @else {
              color: $color-lightFont;
            }
          }
        }
        .actionsPosition {
          .inputTextGroup {
            .inputText {
              .inputTextTag {
                color: $color-link;
              }
            }
            .inputSend {
              .sendBtn {
                background-color: transparent;
                color: $color-icon;
              }
            }
          }
          // RoomChat/RoomChatInput/RoomChatInputActions/index.scss
          .roomChatInputActions {
            .action {
              .actionBtn {
                color: $color-icon;
                fill: $color-icon;
                stroke: $color-icon;
              }
              .actionBox {
                background-color: $color-background;
                box-shadow: 0 0 0 1px rgba(invert($color-background), 0.1),
                  0 1px 5px rgba(invert($color-background), 0.25);
                // RoomChat/RoomChatInput/RoomChatInputActions/Emoji.scss
                &.emoji {
                  .scroll {
                    .type {
                      .typename {
                        color: $color-secondaryFont;
                      }
                    }
                  }
                }
                // RoomChat/RoomChatInput/RoomChatInputActions/Sticker.scss
                &.sticker {
                  .sliderSticker {
                    .icon {
                      &.active {
                        border-bottom-color: $color-secondaryFont;
                      }
                    }
                  }
                }
                // RoomChat/RoomChatInput/RoomChatInputActions/Recorder.scss
                &.recorder {
                  .timestamp {
                    color: $color-secondaryFont;
                  }
                  .recorderBtn {
                    background-color: $color-recorder;
                    @if lightness($color-recorder) > $lightness-level {
                      color: $color-darkFont;
                    } @else {
                      color: $color-lightFont;
                    }

                    &.active {
                      .recorderText {
                        @if lightness($color-recorder) > $lightness-level {
                          background-color: $color-darkFont;
                        } @else {
                          background-color: $color-lightFont;
                        }
                      }
                    }
                  }

                  .frequency {
                    @if $lightness-color-background > $lightness-level {
                      background-color: $color-darkFont;
                    } @else {
                      background-color: $color-lightFont;
                    }
                  }
                }
              }
              // RoomChat/RoomChatInput/RoomChatInputActions/Location.scss
              &.location {
                .modalBox {
                  .map {
                    .marker {
                      i {
                        color: $color-mapMarker;
                        fill: $color-mapMarker;
                      }
                    }
                  }
                }
              }
              // RoomChat/RoomChatInput/RoomChatInputActions/Group.scss
              &.group {
                .subActions {
                  .subActionsInner {
                    background-color: $color-background;
                    border-color: $color-frameLine;
                  }
                }
              }
            }
          }
        }
      }
    }
    // RoomChat/RoomChatForwardRooms.scss
    .roomChatForwardRooms {
      .roomChatForwardSending {
        background-color: rgba($color-background, 0.5);
      }
    }
  }
  // RoomInfo/index.scss
  .roomInfo {
    border-left-color: $color-frameLine;
    background-color: $color-background;
    .roomHeader {
      .bot {
        fill: $color-secondaryFont;
        &.active {
          fill: $color-icon;
        }
      }
      .mute {
        fill: $color-secondaryFont;
        &.active {
          fill: $color-icon;
        }
      }
    }
    .roomDate {
      border-bottom-color: $color-frameLine;
      color: $color-secondaryFont;
    }
    .roomSearch {
      border-bottom-color: $color-frameLine;
      color: $color-secondaryFont;
    }
    .roomMembersCount {
      color: $color-secondaryFont;
      .roomMembersCountIcon {
        fill: $color-primary;
      }
    }
    .roomMembersList {
      .list {
        .member {
          .roomEdit {
            .icon {
              fill: $color-secondaryFont;
            }
          }
        }
      }
    }
    .roomIframes {
      .roomIframesItem {
        .roomIframesItemTitle {
          color: $color-secondaryFont;
          border-top-color: $color-frameLine;
          .roomIframesItemTitleIcon {
            fill: $color-primary;
          }
        }
      }
    }
    .roomEdit {
      .icon {
        fill: $color-primary;
      }
      .down {
        border-color: $color-secondaryFont;
        background-color: $color-background;
        color: $color-secondaryFont;
        .downItem {
          &:hover {
            color: $color-font;
          }
        }
      }
    }
  }
  // RoomList/index.scss
  .roomList {
    border-right-color: $color-frameLine;
    background-color: $color-background;
    .roomHeader {
      .logout {
        fill: $color-primary;
      }
      .notification {
        fill: $color-secondaryFont;
        &.active {
          fill: $color-icon;
        }
      }
    }
    .search {
      border-bottom-color: $color-frameLine;
      .searchInput {
        background-color: mix($color-frameLine, $color-background);
        border-color: $color-frameLine;
      }
      .searchClear {
        svg {
          stroke: $color-primary;
        }
      }
    }
    .list {
      .roomFolderBox {
        &.moveToFolder {
          border-color: $color-primary;
        }
        .roomFolder {
          .roomFolderItems {
            border-left-color: $color-primary;
          }
        }
      }
    }
    .searchResult {
      .searchResultTitle {
        color: $color-actionBtn;
      }
      .searchResultItem {
        &:hover {
          @if $lightness-color-background > 50 {
            background-color: darken($color-background, 3);
          } @else {
            background-color: lighten($color-background, 3);
          }
        }
        .text {
          .textBottom {
            @if $lightness-color-font > 50 {
              color: darken($color-font, 27);
            } @else {
              color: lighten($color-font, 27);
            }
          }
        }
      }
    }
    .roomListActions {
      .addFolderBtn {
        background-color: $color-background;
        border-color: $color-itemBorder;
        &:hover {
          @if $lightness-color-primary > $lightness-level {
            background-color: darken($color-primary, 5);
          } @else {
            background-color: lighten($color-primary, 5);
          }
        }
        .btnIcon {
          @if $lightness-color-primary > $lightness-level {
            color: $color-darkFont;
            stroke: $color-darkFont;
          } @else {
            color: $color-lightFont;
            stroke: $color-lightFont;
          }
        }
      }
      .addRoomBtn {
        background-color: $color-background;
        border-color: $color-itemBorder;
        &:hover {
          @if $lightness-color-primary > $lightness-level {
            background-color: darken($color-primary, 5);
          } @else {
            background-color: lighten($color-primary, 5);
          }
        }
        .btnIcon {
          @if $lightness-color-primary > $lightness-level {
            stroke: $color-darkFont;
          } @else {
            stroke: $color-lightFont;
          }
        }
      }
    }
  }
  // RoomList/RoomListItem.scss
  .roomListItem {
    border-bottom-color: $color-frameLine;
    background-color: $color-background;
    &:hover {
      @if $lightness-color-background > 50 {
        background-color: darken($color-background, 3);
      } @else {
        background-color: lighten($color-background, 3);
      }
    }
    &.active {
      @if $lightness-color-background > $lightness-level {
        background-color: darken($color-background, 5);
      } @else {
        background-color: lighten($color-background, 5);
      }
    }
    .dragIcon {
      &:before,
      &:after {
        background-color: lighten($color-icon, 15);
      }
    }
    .text {
      .textTop {
        .nameDescription {
          .description {
            @if $lightness-color-font > 50 {
              color: darken($color-font, 27);
            } @else {
              color: lighten($color-font, 27);
            }
          }
        }
      }
      .textMiddle {
        color: $color-link;
      }
      .textBottom {
        @if $lightness-color-font > 50 {
          color: darken($color-font, 40);
        } @else {
          color: lighten($color-font, 40);
        }
      }
    }
    .unread {
      background-color: $color-primary;
      @if $lightness-color-primary > $lightness-level {
        color: $color-darkFont;
      } @else {
        color: $color-lightFont;
      }
    }
    .actions {
      .actionsBtn {
        fill: $color-actionBtn;
      }
      .actionsList {
        background-color: $color-background;
        border-color: $color-secondaryFont;
        .actionsItem {
          color: $color-secondaryFont;
          &:hover {
            color: $color-font;
          }
        }
      }
    }
    .roomListItemLock {
      background-color: rgba($color-background, 0.8);
    }
  }
}
